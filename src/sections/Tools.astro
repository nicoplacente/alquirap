---
import SectionContainer from "../components/SectionContainer.astro";
import Title from "../components/Title.astro";
import { tools } from "../libs/tools-constants.js";
import Search from "../components/icons/Search.astro";
---

<SectionContainer id="tools" className="w-full !px-0 bg-blue-100">
  <Title>Nuestras Herramientas</Title>

  <div
    class="flex flex-col lg:flex-row justify-center items-center gap-4 sm:gap-2 mb-8 text-sm"
  >
    <div class="px-4 w-full max-w-md relative">
      <span
        class="search-button absolute right-7 top-1/2 -translate-y-1/2 text-blue-800"
      >
        <Search class="size-4" />
      </span>
      <input
        type="text"
        id="tools-search"
        placeholder="Buscar por nombre o marca..."
        class="w-full text-black pl-4 pr-7 py-2 border text-base border-blue-800 rounded focus:outline-none search-cancel"
      />
      <button
        id="clear-search"
        type="button"
        class="absolute right-7 top-1/2 -translate-y-1/2 text-blue-500 hover:text-blue-700 hidden cursor-pointer"
      >
        ✕
      </button>
    </div>

    <div class="flex justify-center space-x-2">
      <button
        class="prev-btn px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 cursor-pointer"
      >
        Anterior
      </button>

      <span class="px-4 py-2 bg-blue-800 rounded">
        Página <span class="current-page-number">1</span> de
        <span class="total-pages-number">1</span>
      </span>

      <button
        class="next-btn px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 cursor-pointer"
      >
        Siguiente
      </button>
    </div>
  </div>

  <div
    id="tools-container"
    class="max-w-7xl mx-auto grid sm:grid-cols-2 lg:grid-cols-3 gap-8 px-6"
    data-tools={JSON.stringify(tools)}
  >
  </div>

  <div class="flex justify-center mt-8 space-x-2">
    <button
      class="prev-btn prev-btn-2 text-sm sm:text-base px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 cursor-pointer"
    >
      Anterior
    </button>

    <span
      class="current-page-container px-4 py-2 text-sm sm:text-base bg-blue-800 rounded"
    >
      Página <span class="current-page-number">1</span> de
      <span class="total-pages-number">1</span>
    </span>

    <button
      class="next-btn next-btn-2 text-sm sm:text-base px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 cursor-pointer"
    >
      Siguiente
    </button>
  </div>
</SectionContainer>

<script is:inline>
  let ITEMS_PER_PAGE = window.innerWidth <= 1024 ? 6 : 24;
  let currentPage = 1;

  const container = document.getElementById("tools-container");
  const prevBtns = document.querySelectorAll(".prev-btn");
  const nextBtns = document.querySelectorAll(".next-btn");
  const currentPageEls = document.querySelectorAll(".current-page-number");
  const totalPagesEls = document.querySelectorAll(".total-pages-number");
  const currentPageContainer = document.querySelector(
    ".current-page-container"
  );
  const prevBtns2 = document.querySelector(".prev-btn-2");
  const nextBtns2 = document.querySelector(".next-btn-2");
  const toolsSection = document.getElementById("tools");

  const clientTools = JSON.parse(container.dataset.tools);
  let filteredTools = [...clientTools];
  let totalPages = Math.ceil(filteredTools.length / ITEMS_PER_PAGE);

  const searchInput = document.getElementById("tools-search");

  function renderTools(page) {
    const toolsToRender = searchInput.value.trim()
      ? filteredTools
      : clientTools;

    const start = (page - 1) * ITEMS_PER_PAGE;
    const end = start + ITEMS_PER_PAGE;
    const paginated = toolsToRender.slice(start, end);

    const whatsapp = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="24"
  height="24"
  viewBox="0 0 24 24"
  fill="none"
  stroke="currentColor"
  stroke-width="2"
  stroke-linecap="round"
  stroke-linejoin="round"
  class="icon icon-tabler icons-tabler-outline icon-tabler-brand-whatsapp"
  ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
    d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9"></path><path
    d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1"
  ></path></svg
>`;

    container.innerHTML = paginated
      .map(
        (tool) => `
      <div class="bg-white flex flex-col justify-between p-4 rounded-xl shadow hover:shadow-lg transition group overflow-hidden">
        <img src="${tool.image}" alt="${tool.name}" class="rounded-lg w-full h-48 object-scale-down group-hover:scale-110 transition-transform duration-300" title="${tool.name}" />
        <h3 class="mt-4 text-xl font-semibold text-blue-800 text-balance">${tool.name}</h3>
        <span class="flex w-full justify-between text-pretty text-blue-800/70 text-sm">
          <p>${tool.brand}</p>
          <p>${tool.model}</p>
        </span>
        <p class="text-gray-600 text-pretty">${tool.description}</p>
        <a 
          href="https://wa.me/5492926496732?text=${encodeURIComponent(`Hola! Quisiera consultar el precio de alquiler de "${tool.name}".`)}"
          target="_blank"
          class="mt-3 px-4 py-2 bg-green-600 flex items-center gap-2 justify-center active:scale-95 text-white rounded hover:bg-green-500 transition duration-300 text-center"
        >
          ${whatsapp} Consultar precios
        </a>
      </div>
      `
      )
      .join("");

    totalPages = Math.ceil(toolsToRender.length / ITEMS_PER_PAGE);
    currentPageEls.forEach((el) => (el.textContent = page));
    totalPagesEls.forEach((el) => (el.textContent = totalPages));

    prevBtns.forEach((btn) => (btn.disabled = page === 1));
    nextBtns.forEach((btn) => (btn.disabled = page === totalPages));

    if (toolsToRender.length === 0) {
      prevBtns2.classList.add("hidden");
      nextBtns2.classList.add("hidden");
      currentPageContainer.classList.add("hidden");
      container.classList.remove("grid");
      container.innerHTML =
        "<p class='text-center text-pretty mx-auto text-gray-800'>No se encontraron herramientas con ese nombre o marca.</p>";
    } else {
      nextBtns2.classList.remove("hidden");
      prevBtns2.classList.remove("hidden");
      currentPageContainer.classList.remove("hidden");
      container.classList.add("grid");
    }
  }

  function goPrevPage() {
    if (currentPage > 1) {
      currentPage--;
      renderTools(currentPage);
      toolsSection.scrollIntoView({ behavior: "smooth" });
    }
  }

  function goNextPage() {
    if (currentPage < totalPages) {
      currentPage++;
      renderTools(currentPage);
      toolsSection.scrollIntoView({ behavior: "smooth" });
    }
  }

  prevBtns.forEach((btn) => btn.addEventListener("click", goPrevPage));
  nextBtns.forEach((btn) => btn.addEventListener("click", goNextPage));

  searchInput.addEventListener("input", () => {
    const query = searchInput.value.trim().toLowerCase();
    filteredTools = clientTools.filter(
      (tool) =>
        tool.name.toLowerCase().includes(query) ||
        tool.brand.toLowerCase().includes(query)
    );

    currentPage = 1;
    renderTools(currentPage);
  });

  renderTools(currentPage);

  window.addEventListener("resize", () => {
    const newItems = window.innerWidth <= 1024 ? 6 : 24;
    if (newItems !== ITEMS_PER_PAGE) {
      ITEMS_PER_PAGE = newItems;
      totalPages = Math.ceil(filteredTools.length / ITEMS_PER_PAGE);

      if (currentPage > totalPages) currentPage = totalPages;

      renderTools(currentPage);
    }
  });

  const clearBtn = document.getElementById("clear-search");
  const searchButton = document.querySelector(".search-button");

  searchInput.addEventListener("input", () => {
    if (searchInput.value.trim() !== "") {
      clearBtn.classList.remove("hidden");
      searchButton.classList.add("hidden");
    } else {
      clearBtn.classList.add("hidden");
      searchButton.classList.remove("hidden");
    }
  });

  clearBtn.addEventListener("click", () => {
    searchInput.value = "";
    clearBtn.classList.add("hidden");
    searchInput.dispatchEvent(new Event("input"));
    searchInput.focus();
  });
</script>
